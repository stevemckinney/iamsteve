@layer base {
  :root {
    /**
    * grid
    */
    --grid-container: 1920px;
    --grid-content: 1344px;

    /* Compensates for additional grid gutters being included */
    --grid-margin: calc(48px - var(--grid-gutter));
    --grid-gutter: 32px;
    --grid-gap: 32px;
    --base-px: 8px;

    /* autoprefixer: off */
    --grid: [margin-start] var(--grid-margin) [container-start] repeat(2, 1fr)
      [prose-start] repeat(6, 1fr) [prose-end] repeat(2, 1fr) [container-end]
      var(--grid-margin) [margin-end];

    /**
   * --spacing isn't * 3 as the gutter is included.
   * The gutter here is using a gap-x-4 so that plus --spacing is equal to 24px
   */
    --grid-6: [margin-start] var(--base-px) [container-start content-start
      prose-start] repeat(6, minmax(0, 1fr)) [prose-end content-end
      container-end] var(--base-px) [margin-end];

    --grid-12: [margin-start] calc(var(--base-px) * 2) [container-start]
      minmax(0, 1fr) [content-start prose-start] repeat(10, minmax(0, 1fr))
      [prose-end content-end] minmax(0, 1fr) [container-end]
      calc(var(--base-px) * 2) [margin-end];

    --grid-12-wide: [margin-start] calc(var(--base-px) * 2) [container-start]
      minmax(0, 1fr) [content-start] minmax(0, 1fr) [prose-start]
      repeat(8, minmax(0, 1fr)) [prose-end] minmax(0, 1fr) [content-end]
      minmax(0, 1fr) [container-end] calc(var(--base-px) * 2) [margin-end];

    --grid-16-narrow: [margin-start] calc(var(--grid-margin) - 4px)
      [container-start] repeat(1, minmax(0, 1fr)) [content-start]
      repeat(2, minmax(0, 1fr)) [prose-start] repeat(10, minmax(0, 1fr))
      [prose-end] repeat(2, minmax(0, 1fr)) [content-end]
      repeat(1, minmax(0, 1fr)) [container-end] calc(var(--grid-margin) - 4px)
      [margin-end];

    --grid-16: [margin-start] var(--grid-margin) [container-start]
      repeat(2, minmax(0, 1fr)) [content-start] repeat(2, minmax(0, 1fr))
      [prose-start] repeat(8, minmax(0, 1fr)) [prose-end]
      repeat(2, minmax(0, 1fr)) [content-end] repeat(2, minmax(0, 1fr))
      [container-end] var(--grid-margin) [margin-end];

    /**
   * Overridable capability for tailwind
   */
    --ui-border-opacity-weak: 0.08;
    --ui-border-opacity-strong: 0.12;
    --ui-border-color: rgba(117 99 98 / var(--ui-border-opacity-strong));
    --ui-border-color-hover: rgba(117 99 98 / 0.32);
    --ui-border-color-strong: rgba(117 99 98 / 0.12);
    --ui-border-color-strong-hover: rgba(117 99 98 / 0.4);
    --ui-border-color-weak: rgba(249 243 241 / 0.12);
    --ui-border-color-weak-hover: rgba(249 243 241 / 0.24);

    --shadow-subtle: 0 0 0 1px var(--ui-border-color),
      0px 1px 1px -0.5px var(--ui-border-color),
      0px 2px 3px -1.5px var(--ui-border-color);
    --shadow-reduced: 0 -1px var(--ui-border-color-weak),
      0 1px var(--ui-border-color-strong), 0 0 0 1px var(--ui-border-color),
      0px 1px 1px -0.5px var(--ui-border-color),
      0px 2px 3px -1.5px var(--ui-border-color),
      0px 3px 4px -2px var(--ui-border-color);
    --shadow-reduced-depth: 0px 1px 1px -0.5px var(--ui-border-color),
      0px 2px 3px -1.5px var(--ui-border-color),
      0px 3px 4px -2px var(--ui-border-color);
    --shadow-placed: var(--shadow-placed-border), var(--shadow-placed-depth);
    --shadow-placed-border: 0 -1px var(--ui-border-color-weak),
      0 1px var(--ui-border-color-strong), 0 0 0 1px var(--ui-border-color);
    --shadow-placed-depth: 0 1px 1px -0.5px var(--ui-border-color),
      0 1px 3px -1.5px var(--ui-border-color),
      0 2px 4px -2px var(--ui-border-color),
      0 3px 6px -3px var(--ui-border-color),
      0 3px 6px -3px var(--ui-border-color),
      0 6px 9px -4.5px var(--ui-border-color);
    --shadow-picked: var(--shadow-picked-border), var(--shadow-picked-depth);
    --shadow-picked-border: 0 -1px var(--ui-border-color-weak),
      0 1px var(--ui-border-color-strong),
      0 0 0 1px var(--ui-border-color-hover);
    --shadow-picked-depth: 0 1px 1px -0.5px var(--ui-border-color),
      0 1px 3px -1.5px var(--ui-border-color),
      0 2px 4px -2px var(--ui-border-color),
      0 3px 6px -3px var(--ui-border-color),
      0 6px 12px -6px var(--ui-border-color),
      0 12px 18px -9px var(--ui-border-color);
    --shadow-floating: 0 10px 24px -2px rgba(117, 99, 98, 0.12),
      0 2px 4px rgba(117, 99, 98, 0.08);
  }
}

.layout {
  grid-template-columns: var(--grid-6);

  @media (width >= theme(--breakpoint-sm)) {
    grid-template-columns: var(--grid-12);
  }

  @media (width >= theme(--breakpoint-md)) {
    grid-template-columns: var(--grid-12-wide);
  }

  @media (width >= theme(--breakpoint-xl)) {
    grid-template-columns: var(--grid-16-narrow);
  }

  @media (width >= theme(--breakpoint-2xl)) {
    grid-template-columns: var(--grid-16);
  }
}

@keyframes show {
  from {
    opacity: 0;
    transform: scale3d(0.9, 0.9, 0.9);
  }
  to {
    opacity: 1;
    transform: scale3d(1, 1, 1);
  }
}

@keyframes hide {
  from {
    opacity: 1;
    transform: scale3d(1, 1, 1);
  }
  to {
    opacity: 0;
    transform: scale3d(0.9, 0.9, 0.9);
  }
}

@keyframes opened-first {
  from {
    transform: translate3d(2px, 18px, 0);
  }
  50% {
    transform: translate3d(2px, 11px, 0);
  }
  to {
    transform: translate3d(2px, 11px, 0) rotate(-45deg);
  }
}

@keyframes opened-last {
  from {
    transform: translate3d(2px, 4px, 0);
  }
  50% {
    transform: translate3d(2px, 11px, 0);
  }
  to {
    transform: translate3d(2px, 11px, 0) rotate(45deg);
  }
}

@keyframes closed-first {
  from {
    transform: translate3d(2px, 11px, 0) rotate(-45deg);
  }
  50% {
    transform: translate3d(2px, 11px, 0);
  }
  to {
    transform: translate3d(2px, 18px, 0);
  }
}

@keyframes closed-last {
  from {
    transform: translate3d(2px, 11px, 0) rotate(45deg);
  }
  50% {
    transform: translate3d(2px, 11px, 0);
  }
  to {
    transform: translate3d(2px, 4px, 0);
  }
}

@keyframes opened-middle {
  to {
    transform: translate3d(4px, 11px, 0) scale3d(0, 0, 0);
  }
}

@keyframes closed-middle {
  to {
    transform: translate3d(4px, 11px, 0) scale3d(1, 1, 1);
  }
}

.toggle-nav span > span:nth-of-type(2) {
  animation: closed-middle 200ms ease-out both;
}

.toggle-nav span > span {
  transform-origin: center center;
}

.toggle-nav span > span:first-child {
  animation: closed-first 200ms ease-out both;
  transform: translate3d(2px, 18px, 0);
}

.toggle-nav span > span:nth-of-type(2) {
  animation: closed-middle 200ms ease-out both;
  transform: translate3d(4px, 11px, 0);
}

.toggle-nav span > span:last-child {
  animation: closed-last 200ms ease-out both;
}

.toggle-nav[data-state='open'] span > span {
  transition: top 200ms, bottom 200ms, transform 400ms 200ms ease-in;
}

.toggle-nav[data-state='open'] span > span:first-child {
  animation: opened-first 200ms ease-out both;
}

.toggle-nav[data-state='open'] span > span:nth-of-type(2) {
  animation: opened-middle 200ms 60ms ease-out both;
  transform: translate3d(4px, 11px, 0) scale3d(0, 0, 0);
}

.toggle-nav[data-state='open'] span > span:last-child {
  animation: opened-last 200ms ease-out both;
}

.nav-content {
  position: relative;
  width: 100%;
  transform-origin: 0 0;
  height: var(--radix-navigation-menu-viewport-height);
}

.nav-viewport[data-state='open'] {
  transform-origin: 50% 0;
  animation: show 200ms ease-out;
}

.nav-viewport[data-state='closed'] {
  transform-origin: 50% 0;
  animation: hide 200ms ease-in;
}

.column-categories li:not(:first-child):not(:nth-of-type(2)) {
  border-top: 1px solid var(--color-neutral-01-250);
}

.list-categories li:not(:first-child) {
  border-top: 1px solid var(--color-neutral-01-250);
}

.image-stack img {
  transition: 0.2s;
}

.image-stack img:hover ~ img,
.image-stack img:focus ~ img {
  transform: translate3d(0, 20rem, 0);
}
